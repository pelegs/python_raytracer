import cv2
from libs.classes import *


screen = Screen(resolution=(160, 120))
camera = Camera(screen=screen)
camera.translate(6 * Z_)

cube_points = np.array(
    [
        [-1.34191, 1.0, -0.446395],
        [1.34191, 1.0, 0.446395],
        [0.44639, 1.0, -1.341913],
        [1.34191, 1.0, 0.446395],
        [-0.44639, -1.0, 1.341913],
        [1.34191, -1.0, 0.446395],
        [-0.44639, 1.0, 1.341913],
        [-1.34191, -1.0, -0.446395],
        [-0.44639, -1.0, 1.341913],
        [0.44639, -1.0, -1.341913],
        [-0.44639, -1.0, 1.341913],
        [-1.34191, -1.0, -0.446395],
        [0.44639, 1.0, -1.341913],
        [1.34191, -1.0, 0.446395],
        [0.44639, -1.0, -1.341913],
        [-1.34191, 1.0, -0.446395],
        [0.44639, -1.0, -1.341913],
        [-1.34191, -1.0, -0.446395],
        [-1.34191, 1.0, -0.446395],
        [-0.44639, 1.0, 1.341913],
        [1.34191, 1.0, 0.446395],
        [1.34191, 1.0, 0.446395],
        [-0.44639, 1.0, 1.341913],
        [-0.44639, -1.0, 1.341913],
        [-0.44639, 1.0, 1.341913],
        [-1.34191, 1.0, -0.446395],
        [-1.34191, -1.0, -0.446395],
        [0.44639, -1.0, -1.341913],
        [1.34191, -1.0, 0.446395],
        [-0.44639, -1.0, 1.341913],
        [0.44639, 1.0, -1.341913],
        [1.34191, 1.0, 0.446395],
        [1.34191, -1.0, 0.446395],
        [-1.34191, 1.0, -0.446395],
        [0.44639, 1.0, -1.341913],
        [0.44639, -1.0, -1.341913],
    ]
)

triangles = [
    Triangle(cube_points[n:n+3], id=i+1)
    for i, n in enumerate(np.arange(0, 36, 3))
]

num_frames = 60
t = np.radians(180/num_frames)
c, s = np.cos(t/2), np.sin(t/2)
rx, ry, rz = np.random.uniform(-1, 1, size=3)
q = np.array([rx*s, ry*s, rz*s, c])

for frame in range(num_frames):
    for triangle in triangles:
        triangle.rotate(q, point=O_)
    camera.draw_triangles(triangles)
    img = cv2.imwrite(
        f"frames/cube_rotate_{frame:03d}.png", np.swapaxes(camera.screen.pixels, 0, 1)
    )
